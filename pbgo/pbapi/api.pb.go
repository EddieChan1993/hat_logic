// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api.proto

package pbapi

import (
	errors "errors"
	kite "git.dhgames.cn/svr_comm/kite"
	server "git.dhgames.cn/svr_comm/kite/server"
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

//根据roleId，提玩家下线
type ReqKickByRoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *ReqKickByRoleId) Reset() {
	*x = ReqKickByRoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqKickByRoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqKickByRoleId) ProtoMessage() {}

func (x *ReqKickByRoleId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqKickByRoleId.ProtoReflect.Descriptor instead.
func (*ReqKickByRoleId) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *ReqKickByRoleId) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type RspKickByRoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspKickByRoleId) Reset() {
	*x = RspKickByRoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspKickByRoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspKickByRoleId) ProtoMessage() {}

func (x *RspKickByRoleId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspKickByRoleId.ProtoReflect.Descriptor instead.
func (*RspKickByRoleId) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *RspKickByRoleId) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspKickByRoleId) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//根据sid，提玩家下线
type ReqKickBySid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid int32 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ReqKickBySid) Reset() {
	*x = ReqKickBySid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqKickBySid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqKickBySid) ProtoMessage() {}

func (x *ReqKickBySid) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqKickBySid.ProtoReflect.Descriptor instead.
func (*ReqKickBySid) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *ReqKickBySid) GetSid() int32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type RspKickBySid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspKickBySid) Reset() {
	*x = RspKickBySid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspKickBySid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspKickBySid) ProtoMessage() {}

func (x *RspKickBySid) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspKickBySid.ProtoReflect.Descriptor instead.
func (*RspKickBySid) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *RspKickBySid) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspKickBySid) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//获取玩家信息
type ReqGetRoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *ReqGetRoleData) Reset() {
	*x = ReqGetRoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRoleData) ProtoMessage() {}

func (x *ReqGetRoleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRoleData.ProtoReflect.Descriptor instead.
func (*ReqGetRoleData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *ReqGetRoleData) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type RspGetRoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RspGetRoleData) Reset() {
	*x = RspGetRoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetRoleData) ProtoMessage() {}

func (x *RspGetRoleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetRoleData.ProtoReflect.Descriptor instead.
func (*RspGetRoleData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *RspGetRoleData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspGetRoleData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *RspGetRoleData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//设置玩家
type ReqSetRoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReqSetRoleData) Reset() {
	*x = ReqSetRoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSetRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSetRoleData) ProtoMessage() {}

func (x *ReqSetRoleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSetRoleData.ProtoReflect.Descriptor instead.
func (*ReqSetRoleData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *ReqSetRoleData) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ReqSetRoleData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RspSetRoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspSetRoleData) Reset() {
	*x = RspSetRoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSetRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSetRoleData) ProtoMessage() {}

func (x *RspSetRoleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSetRoleData.ProtoReflect.Descriptor instead.
func (*RspSetRoleData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *RspSetRoleData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspSetRoleData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0f,
	0x52, 0x73, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22,
	0x20, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x22, 0x3e, 0x0a, 0x0c, 0x52, 0x73, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x53, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x0e, 0x52,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x40, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x32, 0xc9, 0x01, 0x0a, 0x06, 0x47, 0x6d, 0x70, 0x41, 0x70, 0x69, 0x12, 0x32, 0x0a, 0x0c,
	0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x10, 0x2e, 0x52,
	0x65, 0x71, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x10,
	0x2e, 0x52, 0x73, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x09, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x0d, 0x2e,
	0x52, 0x65, 0x71, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x53, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x52,
	0x73, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0f, 0x2e, 0x52, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x52, 0x65,
	0x71, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0f, 0x2e, 0x52,
	0x73, 0x70, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x5a,
	0x0c, 0x2e, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x70, 0x62, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_api_proto_goTypes = []interface{}{
	(*ReqKickByRoleId)(nil), // 0: ReqKickByRoleId
	(*RspKickByRoleId)(nil), // 1: RspKickByRoleId
	(*ReqKickBySid)(nil),    // 2: ReqKickBySid
	(*RspKickBySid)(nil),    // 3: RspKickBySid
	(*ReqGetRoleData)(nil),  // 4: ReqGetRoleData
	(*RspGetRoleData)(nil),  // 5: RspGetRoleData
	(*ReqSetRoleData)(nil),  // 6: ReqSetRoleData
	(*RspSetRoleData)(nil),  // 7: RspSetRoleData
}
var file_proto_api_proto_depIdxs = []int32{
	0, // 0: GmpApi.KickByRoleId:input_type -> ReqKickByRoleId
	2, // 1: GmpApi.KickBySid:input_type -> ReqKickBySid
	4, // 2: GmpApi.GetRoleData:input_type -> ReqGetRoleData
	6, // 3: GmpApi.SetRoleData:input_type -> ReqSetRoleData
	1, // 4: GmpApi.KickByRoleId:output_type -> RspKickByRoleId
	3, // 5: GmpApi.KickBySid:output_type -> RspKickBySid
	5, // 6: GmpApi.GetRoleData:output_type -> RspGetRoleData
	7, // 7: GmpApi.SetRoleData:output_type -> RspSetRoleData
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqKickByRoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspKickByRoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqKickBySid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspKickBySid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetRoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSetRoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSetRoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}

// GmpApiClient is the client API for GmpApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/kite#ClientConn.NewStream.
var GmpApi = &gmpApi{}

type gmpApi struct {
}

func (c *gmpApi) KickByRoleId(destination kite.Destination, request *ReqKickByRoleId, opts ...kite.Option) (response *RspKickByRoleId, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "api", "GmpApi", "KickByRoleId", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspKickByRoleId)
	err = proto.Unmarshal(resPBData, response)
	return
}

func (c *gmpApi) KickBySid(destination kite.Destination, request *ReqKickBySid, opts ...kite.Option) (response *RspKickBySid, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "api", "GmpApi", "KickBySid", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspKickBySid)
	err = proto.Unmarshal(resPBData, response)
	return
}

func (c *gmpApi) GetRoleData(destination kite.Destination, request *ReqGetRoleData, opts ...kite.Option) (response *RspGetRoleData, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "api", "GmpApi", "GetRoleData", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspGetRoleData)
	err = proto.Unmarshal(resPBData, response)
	return
}

func (c *gmpApi) SetRoleData(destination kite.Destination, request *ReqSetRoleData, opts ...kite.Option) (response *RspSetRoleData, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "api", "GmpApi", "SetRoleData", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspSetRoleData)
	err = proto.Unmarshal(resPBData, response)
	return
}

// GmpApiServer is the server API for GmpApi service.
type GmpApiServer interface {
	KickByRoleId(*ReqKickByRoleId) (*RspKickByRoleId, error)
	KickBySid(*ReqKickBySid) (*RspKickBySid, error)
	GetRoleData(*ReqGetRoleData) (*RspGetRoleData, error)
	SetRoleData(*ReqSetRoleData) (*RspSetRoleData, error)
}

type GmpApiService struct {
	handle GmpApiServer
}

func RegGmpApiServer(handle GmpApiServer) {
	server.ServiceDispatchObject.AddService("api", "GmpApi", &GmpApiService{handle: handle})
}

func (s *GmpApiService) Do(function string, reqPBData []byte) (resPBData []byte, err error) {
	switch function {
	case "KickByRoleId":
		return s.KickByRoleId(function, reqPBData)
	case "KickBySid":
		return s.KickBySid(function, reqPBData)
	case "GetRoleData":
		return s.GetRoleData(function, reqPBData)
	case "SetRoleData":
		return s.SetRoleData(function, reqPBData)
	default:
		err = errors.New("function is not found")
	}
	return
}

func (s *GmpApiService) KickByRoleId(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ReqKickByRoleId)
	proto.Unmarshal(reqPBData, req)
	var res *RspKickByRoleId
	res, err = s.handle.KickByRoleId(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}

func (s *GmpApiService) KickBySid(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ReqKickBySid)
	proto.Unmarshal(reqPBData, req)
	var res *RspKickBySid
	res, err = s.handle.KickBySid(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}

func (s *GmpApiService) GetRoleData(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ReqGetRoleData)
	proto.Unmarshal(reqPBData, req)
	var res *RspGetRoleData
	res, err = s.handle.GetRoleData(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}

func (s *GmpApiService) SetRoleData(function string, reqPBData []byte) (resPBData []byte, err error) {
	req := new(ReqSetRoleData)
	proto.Unmarshal(reqPBData, req)
	var res *RspSetRoleData
	res, err = s.handle.SetRoleData(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}
