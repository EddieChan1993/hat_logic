// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/player.proto

package pbdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

type RoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderMgr        *LeaderMgr        `protobuf:"bytes,1,opt,name=leaderMgr,proto3" json:"leaderMgr,omitempty"`                //主角
	HeroMgr          *HeroMgr          `protobuf:"bytes,2,opt,name=heroMgr,proto3" json:"heroMgr,omitempty"`                    //英雄数据
	BagMgr           *BagMgr           `protobuf:"bytes,3,opt,name=bagMgr,proto3" json:"bagMgr,omitempty"`                      //背包
	LevelMgr         *LevelMgr         `protobuf:"bytes,6,opt,name=levelMgr,proto3" json:"levelMgr,omitempty"`                  //关卡
	TalentMgr        *TalentMgr        `protobuf:"bytes,8,opt,name=talentMgr,proto3" json:"talentMgr,omitempty"`                //天赋
	BuildingMgr      *BuildingMgr      `protobuf:"bytes,9,opt,name=buildingMgr,proto3" json:"buildingMgr,omitempty"`            //建筑系统
	ArtifactMgr      *ArtifactMgr      `protobuf:"bytes,10,opt,name=artifactMgr,proto3" json:"artifactMgr,omitempty"`           //天赋系统
	MercenaryMgr     *MercenaryMgr     `protobuf:"bytes,11,opt,name=mercenaryMgr,proto3" json:"mercenaryMgr,omitempty"`         //佣兵系统
	SkillMgr         *SkillMgr         `protobuf:"bytes,12,opt,name=skillMgr,proto3" json:"skillMgr,omitempty"`                 //技能
	InstanceMgr      *InstanceMgr      `protobuf:"bytes,13,opt,name=instanceMgr,proto3" json:"instanceMgr,omitempty"`           //副本
	WarriorOrderMgr  *WarriorOrderMgr  `protobuf:"bytes,14,opt,name=warriorOrderMgr,proto3" json:"warriorOrderMgr,omitempty"`   //勇士令
	InitialChargeMgr *InitialChargeMgr `protobuf:"bytes,15,opt,name=initialChargeMgr,proto3" json:"initialChargeMgr,omitempty"` //首充
	MonthCardMgr     *MonthCardMgr     `protobuf:"bytes,16,opt,name=monthCardMgr,proto3" json:"monthCardMgr,omitempty"`         //月卡
	GachaMgr         *GachaMgr         `protobuf:"bytes,17,opt,name=gachaMgr,proto3" json:"gachaMgr,omitempty"`                 //召唤
	ShopMgr          *ShopMgr          `protobuf:"bytes,18,opt,name=shopMgr,proto3" json:"shopMgr,omitempty"`                   //商店
	DiamondShopMgr   *DiamondShopMgr   `protobuf:"bytes,19,opt,name=diamondShopMgr,proto3" json:"diamondShopMgr,omitempty"`     //钻石商店
	RoleMgr          *RoleMgr          `protobuf:"bytes,20,opt,name=roleMgr,proto3" json:"roleMgr,omitempty"`
	LoginGiftMgr     *LoginGiftMgr     `protobuf:"bytes,21,opt,name=LoginGiftMgr,proto3" json:"LoginGiftMgr,omitempty"` //登陆礼包
	DailyTaskMgr     *DailyTaskMgr     `protobuf:"bytes,22,opt,name=DailyTaskMgr,proto3" json:"DailyTaskMgr,omitempty"` //每日任务
}

func (x *RoleData) Reset() {
	*x = RoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleData) ProtoMessage() {}

func (x *RoleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleData.ProtoReflect.Descriptor instead.
func (*RoleData) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{0}
}

func (x *RoleData) GetLeaderMgr() *LeaderMgr {
	if x != nil {
		return x.LeaderMgr
	}
	return nil
}

func (x *RoleData) GetHeroMgr() *HeroMgr {
	if x != nil {
		return x.HeroMgr
	}
	return nil
}

func (x *RoleData) GetBagMgr() *BagMgr {
	if x != nil {
		return x.BagMgr
	}
	return nil
}

func (x *RoleData) GetLevelMgr() *LevelMgr {
	if x != nil {
		return x.LevelMgr
	}
	return nil
}

func (x *RoleData) GetTalentMgr() *TalentMgr {
	if x != nil {
		return x.TalentMgr
	}
	return nil
}

func (x *RoleData) GetBuildingMgr() *BuildingMgr {
	if x != nil {
		return x.BuildingMgr
	}
	return nil
}

func (x *RoleData) GetArtifactMgr() *ArtifactMgr {
	if x != nil {
		return x.ArtifactMgr
	}
	return nil
}

func (x *RoleData) GetMercenaryMgr() *MercenaryMgr {
	if x != nil {
		return x.MercenaryMgr
	}
	return nil
}

func (x *RoleData) GetSkillMgr() *SkillMgr {
	if x != nil {
		return x.SkillMgr
	}
	return nil
}

func (x *RoleData) GetInstanceMgr() *InstanceMgr {
	if x != nil {
		return x.InstanceMgr
	}
	return nil
}

func (x *RoleData) GetWarriorOrderMgr() *WarriorOrderMgr {
	if x != nil {
		return x.WarriorOrderMgr
	}
	return nil
}

func (x *RoleData) GetInitialChargeMgr() *InitialChargeMgr {
	if x != nil {
		return x.InitialChargeMgr
	}
	return nil
}

func (x *RoleData) GetMonthCardMgr() *MonthCardMgr {
	if x != nil {
		return x.MonthCardMgr
	}
	return nil
}

func (x *RoleData) GetGachaMgr() *GachaMgr {
	if x != nil {
		return x.GachaMgr
	}
	return nil
}

func (x *RoleData) GetShopMgr() *ShopMgr {
	if x != nil {
		return x.ShopMgr
	}
	return nil
}

func (x *RoleData) GetDiamondShopMgr() *DiamondShopMgr {
	if x != nil {
		return x.DiamondShopMgr
	}
	return nil
}

func (x *RoleData) GetRoleMgr() *RoleMgr {
	if x != nil {
		return x.RoleMgr
	}
	return nil
}

func (x *RoleData) GetLoginGiftMgr() *LoginGiftMgr {
	if x != nil {
		return x.LoginGiftMgr
	}
	return nil
}

func (x *RoleData) GetDailyTaskMgr() *DailyTaskMgr {
	if x != nil {
		return x.DailyTaskMgr
	}
	return nil
}

type RoleMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Setting   *Setting   `protobuf:"bytes,1,opt,name=Setting,proto3" json:"Setting,omitempty"`     //设置
	ExtStatus *ExtStatus `protobuf:"bytes,2,opt,name=extStatus,proto3" json:"extStatus,omitempty"` //玩家附加状态
}

func (x *RoleMgr) Reset() {
	*x = RoleMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMgr) ProtoMessage() {}

func (x *RoleMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMgr.ProtoReflect.Descriptor instead.
func (*RoleMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{1}
}

func (x *RoleMgr) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *RoleMgr) GetExtStatus() *ExtStatus {
	if x != nil {
		return x.ExtStatus
	}
	return nil
}

//英雄
type HeroMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heroes map[int32]*Hero `protobuf:"bytes,1,rep,name=heroes,proto3" json:"heroes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //英雄数据 k-hero表id
}

func (x *HeroMgr) Reset() {
	*x = HeroMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroMgr) ProtoMessage() {}

func (x *HeroMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroMgr.ProtoReflect.Descriptor instead.
func (*HeroMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{2}
}

func (x *HeroMgr) GetHeroes() map[int32]*Hero {
	if x != nil {
		return x.Heroes
	}
	return nil
}

//背包
type BagMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   map[int32]int64  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`  //道具
	Equips  map[int32]*Equip `protobuf:"bytes,2,rep,name=equips,proto3" json:"equips,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 每个装备单独ID
	MaxEqId int32            `protobuf:"varint,3,opt,name=maxEqId,proto3" json:"maxEqId,omitempty"`                                                                                       //装备自增id
}

func (x *BagMgr) Reset() {
	*x = BagMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BagMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BagMgr) ProtoMessage() {}

func (x *BagMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BagMgr.ProtoReflect.Descriptor instead.
func (*BagMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{3}
}

func (x *BagMgr) GetItems() map[int32]int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BagMgr) GetEquips() map[int32]*Equip {
	if x != nil {
		return x.Equips
	}
	return nil
}

func (x *BagMgr) GetMaxEqId() int32 {
	if x != nil {
		return x.MaxEqId
	}
	return 0
}

//天赋
type TalentMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talents  map[int32]*Talent `protobuf:"bytes,1,rep,name=talents,proto3" json:"talents,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //天赋 k-天赋唯一id（流水id）
	Points   map[int32]int32   `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`  //天赋点数 k-天赋的类型id v-消耗点数
	ResetNum int32             `protobuf:"varint,4,opt,name=resetNum,proto3" json:"resetNum,omitempty"`                                                                                       //重置次数
}

func (x *TalentMgr) Reset() {
	*x = TalentMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentMgr) ProtoMessage() {}

func (x *TalentMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentMgr.ProtoReflect.Descriptor instead.
func (*TalentMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{4}
}

func (x *TalentMgr) GetTalents() map[int32]*Talent {
	if x != nil {
		return x.Talents
	}
	return nil
}

func (x *TalentMgr) GetPoints() map[int32]int32 {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *TalentMgr) GetResetNum() int32 {
	if x != nil {
		return x.ResetNum
	}
	return 0
}

//关卡
type LevelMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterLevelMax int32 `protobuf:"varint,2,opt,name=monsterLevelMax,proto3" json:"monsterLevelMax,omitempty"` //打赢的最高播次
	LevelPkId       int32 `protobuf:"varint,3,opt,name=levelPkId,proto3" json:"levelPkId,omitempty"`             //关卡连续性id
	SettleAt        int64 `protobuf:"varint,4,opt,name=settleAt,proto3" json:"settleAt,omitempty"`               //最近一次结算时间
}

func (x *LevelMgr) Reset() {
	*x = LevelMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelMgr) ProtoMessage() {}

func (x *LevelMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelMgr.ProtoReflect.Descriptor instead.
func (*LevelMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{5}
}

func (x *LevelMgr) GetMonsterLevelMax() int32 {
	if x != nil {
		return x.MonsterLevelMax
	}
	return 0
}

func (x *LevelMgr) GetLevelPkId() int32 {
	if x != nil {
		return x.LevelPkId
	}
	return 0
}

func (x *LevelMgr) GetSettleAt() int64 {
	if x != nil {
		return x.SettleAt
	}
	return 0
}

//主角
type LeaderMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                //主角id
	Lv       int32           `protobuf:"varint,2,opt,name=lv,proto3" json:"lv,omitempty"`                                                                                                //主角等级
	Equip    map[int32]int32 `protobuf:"bytes,3,rep,name=equip,proto3" json:"equip,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //穿在身上的装备 k-部位 v-装备id
	SkillIds []int32         `protobuf:"varint,4,rep,packed,name=skillIds,proto3" json:"skillIds,omitempty"`                                                                             //装备的技能id
	Mp       *Mp             `protobuf:"bytes,5,opt,name=mp,proto3" json:"mp,omitempty"`                                                                                                 //mp
}

func (x *LeaderMgr) Reset() {
	*x = LeaderMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderMgr) ProtoMessage() {}

func (x *LeaderMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderMgr.ProtoReflect.Descriptor instead.
func (*LeaderMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{6}
}

func (x *LeaderMgr) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeaderMgr) GetLv() int32 {
	if x != nil {
		return x.Lv
	}
	return 0
}

func (x *LeaderMgr) GetEquip() map[int32]int32 {
	if x != nil {
		return x.Equip
	}
	return nil
}

func (x *LeaderMgr) GetSkillIds() []int32 {
	if x != nil {
		return x.SkillIds
	}
	return nil
}

func (x *LeaderMgr) GetMp() *Mp {
	if x != nil {
		return x.Mp
	}
	return nil
}

//领地系统
type BuildingMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LordsMansion  *LordsMansion          `protobuf:"bytes,1,opt,name=lordsMansion,proto3" json:"lordsMansion,omitempty"`                                                                                        //领主府
	WorkerTotal   int32                  `protobuf:"varint,2,opt,name=workerTotal,proto3" json:"workerTotal,omitempty"`                                                                                         //拥有的工人总数
	BuildingRes   map[int32]*BuildingRes `protobuf:"bytes,4,rep,name=buildingRes,proto3" json:"buildingRes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //资源建筑
	WorkerBuyNums int32                  `protobuf:"varint,5,opt,name=workerBuyNums,proto3" json:"workerBuyNums,omitempty"`                                                                                     //工人购买此时
	LastRefreshAt int64                  `protobuf:"varint,6,opt,name=lastRefreshAt,proto3" json:"lastRefreshAt,omitempty"`                                                                                     //最近刷新时间
}

func (x *BuildingMgr) Reset() {
	*x = BuildingMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingMgr) ProtoMessage() {}

func (x *BuildingMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingMgr.ProtoReflect.Descriptor instead.
func (*BuildingMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{7}
}

func (x *BuildingMgr) GetLordsMansion() *LordsMansion {
	if x != nil {
		return x.LordsMansion
	}
	return nil
}

func (x *BuildingMgr) GetWorkerTotal() int32 {
	if x != nil {
		return x.WorkerTotal
	}
	return 0
}

func (x *BuildingMgr) GetBuildingRes() map[int32]*BuildingRes {
	if x != nil {
		return x.BuildingRes
	}
	return nil
}

func (x *BuildingMgr) GetWorkerBuyNums() int32 {
	if x != nil {
		return x.WorkerBuyNums
	}
	return 0
}

func (x *BuildingMgr) GetLastRefreshAt() int64 {
	if x != nil {
		return x.LastRefreshAt
	}
	return 0
}

//神器
type ArtifactMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact    map[int32]*Artifact      `protobuf:"bytes,1,rep,name=artifact,proto3" json:"artifact,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //拥有的神器，k-神器id，v-神器具体信息
	Slots       []*ArtifactSummoningSlot `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`                                                                                                //召唤界面信息
	RefreshNums int32                    `protobuf:"varint,3,opt,name=refreshNums,proto3" json:"refreshNums,omitempty"`                                                                                   //刷新次数
}

func (x *ArtifactMgr) Reset() {
	*x = ArtifactMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtifactMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactMgr) ProtoMessage() {}

func (x *ArtifactMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactMgr.ProtoReflect.Descriptor instead.
func (*ArtifactMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{8}
}

func (x *ArtifactMgr) GetArtifact() map[int32]*Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *ArtifactMgr) GetSlots() []*ArtifactSummoningSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *ArtifactMgr) GetRefreshNums() int32 {
	if x != nil {
		return x.RefreshNums
	}
	return 0
}

//佣兵系统
type MercenaryMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MercenaryAll       map[int32]*Mercenary `protobuf:"bytes,1,rep,name=MercenaryAll,proto3" json:"MercenaryAll,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //佣兵，k-位置，v-佣兵信息
	LastRefreshWeek    int32                `protobuf:"varint,3,opt,name=lastRefreshWeek,proto3" json:"lastRefreshWeek,omitempty"`                                                                                   //最近刷新的周
	FinishDrawTaskNums int32                `protobuf:"varint,4,opt,name=finishDrawTaskNums,proto3" json:"finishDrawTaskNums,omitempty"`                                                                             //完成的任务并且已经领取
	DrawWeekGift       []int32              `protobuf:"varint,5,rep,packed,name=drawWeekGift,proto3" json:"drawWeekGift,omitempty"`                                                                                  //已经领取的周任务礼盒
	RefreshTimes       int32                `protobuf:"varint,6,opt,name=refreshTimes,proto3" json:"refreshTimes,omitempty"`                                                                                         //刷新佣兵槽次数
}

func (x *MercenaryMgr) Reset() {
	*x = MercenaryMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercenaryMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercenaryMgr) ProtoMessage() {}

func (x *MercenaryMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercenaryMgr.ProtoReflect.Descriptor instead.
func (*MercenaryMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{9}
}

func (x *MercenaryMgr) GetMercenaryAll() map[int32]*Mercenary {
	if x != nil {
		return x.MercenaryAll
	}
	return nil
}

func (x *MercenaryMgr) GetLastRefreshWeek() int32 {
	if x != nil {
		return x.LastRefreshWeek
	}
	return 0
}

func (x *MercenaryMgr) GetFinishDrawTaskNums() int32 {
	if x != nil {
		return x.FinishDrawTaskNums
	}
	return 0
}

func (x *MercenaryMgr) GetDrawWeekGift() []int32 {
	if x != nil {
		return x.DrawWeekGift
	}
	return nil
}

func (x *MercenaryMgr) GetRefreshTimes() int32 {
	if x != nil {
		return x.RefreshTimes
	}
	return 0
}

//副本
type InstanceMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClimbTower map[int32]*InsClimbTower `protobuf:"bytes,1,rep,name=climbTower,proto3" json:"climbTower,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //爬塔玩法
	Boss       *InsBoss                 `protobuf:"bytes,2,opt,name=boss,proto3" json:"boss,omitempty"`                                                                                                      //Boss玩法
}

func (x *InstanceMgr) Reset() {
	*x = InstanceMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceMgr) ProtoMessage() {}

func (x *InstanceMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceMgr.ProtoReflect.Descriptor instead.
func (*InstanceMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{10}
}

func (x *InstanceMgr) GetClimbTower() map[int32]*InsClimbTower {
	if x != nil {
		return x.ClimbTower
	}
	return nil
}

func (x *InstanceMgr) GetBoss() *InsBoss {
	if x != nil {
		return x.Boss
	}
	return nil
}

//登陆礼包
type LoginGiftMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawGift     map[int32]int64 `protobuf:"bytes,1,rep,name=drawGift,proto3" json:"drawGift,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //已经领取的
	FirstLoginAt int64           `protobuf:"varint,2,opt,name=firstLoginAt,proto3" json:"firstLoginAt,omitempty"`                                                                                  //首次登陆
}

func (x *LoginGiftMgr) Reset() {
	*x = LoginGiftMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginGiftMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginGiftMgr) ProtoMessage() {}

func (x *LoginGiftMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginGiftMgr.ProtoReflect.Descriptor instead.
func (*LoginGiftMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{11}
}

func (x *LoginGiftMgr) GetDrawGift() map[int32]int64 {
	if x != nil {
		return x.DrawGift
	}
	return nil
}

func (x *LoginGiftMgr) GetFirstLoginAt() int64 {
	if x != nil {
		return x.FirstLoginAt
	}
	return 0
}

//每日任务
type DailyTaskMgr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks         map[int32]*DailyTaskPer `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //任务进度 k-任务id
	LastRefreshAt int64                   `protobuf:"varint,2,opt,name=lastRefreshAt,proto3" json:"lastRefreshAt,omitempty"`                                                                         //最近一次属性
}

func (x *DailyTaskMgr) Reset() {
	*x = DailyTaskMgr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_player_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskMgr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskMgr) ProtoMessage() {}

func (x *DailyTaskMgr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_player_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskMgr.ProtoReflect.Descriptor instead.
func (*DailyTaskMgr) Descriptor() ([]byte, []int) {
	return file_proto_player_proto_rawDescGZIP(), []int{12}
}

func (x *DailyTaskMgr) GetTasks() map[int32]*DailyTaskPer {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *DailyTaskMgr) GetLastRefreshAt() int64 {
	if x != nil {
		return x.LastRefreshAt
	}
	return 0
}

var File_proto_player_proto protoreflect.FileDescriptor

var file_proto_player_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x06, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d,
	0x67, 0x72, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x12, 0x22, 0x0a,
	0x07, 0x68, 0x65, 0x72, 0x6f, 0x4d, 0x67, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x48, 0x65, 0x72, 0x6f, 0x4d, 0x67, 0x72, 0x52, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x4d, 0x67,
	0x72, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x61, 0x67, 0x4d, 0x67, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x42, 0x61, 0x67, 0x4d, 0x67, 0x72, 0x52, 0x06, 0x62, 0x61, 0x67, 0x4d,
	0x67, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x67, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x67, 0x72, 0x52,
	0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x67, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x74, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x4d, 0x67, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4d, 0x67, 0x72, 0x52, 0x09, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x4d, 0x67, 0x72, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x67, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x67, 0x72, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x67, 0x72, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d,
	0x67, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x4d, 0x67, 0x72, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79,
	0x4d, 0x67, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x67, 0x72, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x79, 0x4d, 0x67, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x4d,
	0x67, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x4d, 0x67, 0x72, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x4d, 0x67, 0x72, 0x12, 0x2e, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x67, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x67, 0x72,
	0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x67, 0x72, 0x12, 0x3a, 0x0a,
	0x0f, 0x77, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x57, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x52, 0x0f, 0x77, 0x61, 0x72, 0x72, 0x69, 0x6f,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x12, 0x3d, 0x0a, 0x10, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x67, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x4d, 0x67, 0x72, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x67, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x67, 0x72, 0x52, 0x0c, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x67, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x67,
	0x61, 0x63, 0x68, 0x61, 0x4d, 0x67, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x47, 0x61, 0x63, 0x68, 0x61, 0x4d, 0x67, 0x72, 0x52, 0x08, 0x67, 0x61, 0x63, 0x68, 0x61, 0x4d,
	0x67, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x52, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x12, 0x37, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x52,
	0x0e, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x67, 0x72, 0x12,
	0x22, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x67, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x67, 0x72, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x69, 0x66, 0x74,
	0x4d, 0x67, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x67, 0x72, 0x52, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47,
	0x69, 0x66, 0x74, 0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x67, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x67, 0x72, 0x52, 0x0c, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x67, 0x72, 0x22, 0x57, 0x0a, 0x07, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x67, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x78,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x79, 0x0a, 0x07, 0x48, 0x65, 0x72, 0x6f, 0x4d, 0x67, 0x72, 0x12, 0x2c, 0x0a,
	0x06, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x48, 0x65, 0x72, 0x6f, 0x4d, 0x67, 0x72, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x0b, 0x48,
	0x65, 0x72, 0x6f, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48, 0x65,
	0x72, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf6, 0x01,
	0x0a, 0x06, 0x42, 0x61, 0x67, 0x4d, 0x67, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x61, 0x67, 0x4d, 0x67, 0x72,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x42, 0x61, 0x67, 0x4d, 0x67, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x45, 0x71, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x45, 0x71, 0x49, 0x64, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x0b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x02, 0x0a, 0x09, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4d, 0x67,
	0x72, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x4d, 0x67, 0x72, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x1a, 0x43, 0x0a, 0x0c, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x6e, 0x0a, 0x08, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x67, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x50, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x50, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x67,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6c,
	0x76, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x4d, 0x70, 0x52, 0x02, 0x6d, 0x70, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x71, 0x75, 0x69, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x02, 0x0a, 0x0b, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x67, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x6c, 0x6f, 0x72,
	0x64, 0x73, 0x4d, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x4c, 0x6f, 0x72, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6c, 0x6f, 0x72, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f,
	0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x67,
	0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x75,
	0x79, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x1a, 0x4c, 0x0a, 0x10, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d, 0x67, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d, 0x67, 0x72, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d,
	0x73, 0x1a, 0x46, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc2, 0x02, 0x0a, 0x0c, 0x4d, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x67, 0x72, 0x12, 0x43, 0x0a, 0x0c, 0x4d, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x67, 0x72, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x12,
	0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x65,
	0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x61,
	0x77, 0x57, 0x65, 0x65, 0x6b, 0x47, 0x69, 0x66, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x72, 0x61, 0x77, 0x57, 0x65, 0x65, 0x6b, 0x47, 0x69, 0x66, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x1a, 0x4b, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6c,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8,
	0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x67, 0x72, 0x12, 0x3c,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x6d, 0x62, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x67, 0x72,
	0x2e, 0x43, 0x6c, 0x69, 0x6d, 0x62, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6d, 0x62, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x04,
	0x62, 0x6f, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x49, 0x6e, 0x73,
	0x42, 0x6f, 0x73, 0x73, 0x52, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x1a, 0x4d, 0x0a, 0x0f, 0x43, 0x6c,
	0x69, 0x6d, 0x62, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x49, 0x6e, 0x73, 0x43, 0x6c, 0x69, 0x6d, 0x62, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x67, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x72,
	0x61, 0x77, 0x47, 0x69, 0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x67, 0x72, 0x2e, 0x44, 0x72, 0x61, 0x77,
	0x47, 0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64, 0x72, 0x61, 0x77, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x72, 0x61, 0x77, 0x47,
	0x69, 0x66, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x67, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x67, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x1a, 0x47, 0x0a, 0x0a, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x70,
	0x62, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_player_proto_rawDescOnce sync.Once
	file_proto_player_proto_rawDescData = file_proto_player_proto_rawDesc
)

func file_proto_player_proto_rawDescGZIP() []byte {
	file_proto_player_proto_rawDescOnce.Do(func() {
		file_proto_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_player_proto_rawDescData)
	})
	return file_proto_player_proto_rawDescData
}

var file_proto_player_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_player_proto_goTypes = []interface{}{
	(*RoleData)(nil),              // 0: RoleData
	(*RoleMgr)(nil),               // 1: RoleMgr
	(*HeroMgr)(nil),               // 2: HeroMgr
	(*BagMgr)(nil),                // 3: BagMgr
	(*TalentMgr)(nil),             // 4: TalentMgr
	(*LevelMgr)(nil),              // 5: LevelMgr
	(*LeaderMgr)(nil),             // 6: LeaderMgr
	(*BuildingMgr)(nil),           // 7: BuildingMgr
	(*ArtifactMgr)(nil),           // 8: ArtifactMgr
	(*MercenaryMgr)(nil),          // 9: MercenaryMgr
	(*InstanceMgr)(nil),           // 10: InstanceMgr
	(*LoginGiftMgr)(nil),          // 11: LoginGiftMgr
	(*DailyTaskMgr)(nil),          // 12: DailyTaskMgr
	nil,                           // 13: HeroMgr.HeroesEntry
	nil,                           // 14: BagMgr.ItemsEntry
	nil,                           // 15: BagMgr.EquipsEntry
	nil,                           // 16: TalentMgr.TalentsEntry
	nil,                           // 17: TalentMgr.PointsEntry
	nil,                           // 18: LeaderMgr.EquipEntry
	nil,                           // 19: BuildingMgr.BuildingResEntry
	nil,                           // 20: ArtifactMgr.ArtifactEntry
	nil,                           // 21: MercenaryMgr.MercenaryAllEntry
	nil,                           // 22: InstanceMgr.ClimbTowerEntry
	nil,                           // 23: LoginGiftMgr.DrawGiftEntry
	nil,                           // 24: DailyTaskMgr.TasksEntry
	(*SkillMgr)(nil),              // 25: SkillMgr
	(*WarriorOrderMgr)(nil),       // 26: WarriorOrderMgr
	(*InitialChargeMgr)(nil),      // 27: InitialChargeMgr
	(*MonthCardMgr)(nil),          // 28: MonthCardMgr
	(*GachaMgr)(nil),              // 29: GachaMgr
	(*ShopMgr)(nil),               // 30: ShopMgr
	(*DiamondShopMgr)(nil),        // 31: DiamondShopMgr
	(*Setting)(nil),               // 32: Setting
	(*ExtStatus)(nil),             // 33: ExtStatus
	(*Mp)(nil),                    // 34: Mp
	(*LordsMansion)(nil),          // 35: LordsMansion
	(*ArtifactSummoningSlot)(nil), // 36: ArtifactSummoningSlot
	(*InsBoss)(nil),               // 37: InsBoss
	(*Hero)(nil),                  // 38: Hero
	(*Equip)(nil),                 // 39: Equip
	(*Talent)(nil),                // 40: Talent
	(*BuildingRes)(nil),           // 41: BuildingRes
	(*Artifact)(nil),              // 42: Artifact
	(*Mercenary)(nil),             // 43: Mercenary
	(*InsClimbTower)(nil),         // 44: InsClimbTower
	(*DailyTaskPer)(nil),          // 45: DailyTaskPer
}
var file_proto_player_proto_depIdxs = []int32{
	6,  // 0: RoleData.leaderMgr:type_name -> LeaderMgr
	2,  // 1: RoleData.heroMgr:type_name -> HeroMgr
	3,  // 2: RoleData.bagMgr:type_name -> BagMgr
	5,  // 3: RoleData.levelMgr:type_name -> LevelMgr
	4,  // 4: RoleData.talentMgr:type_name -> TalentMgr
	7,  // 5: RoleData.buildingMgr:type_name -> BuildingMgr
	8,  // 6: RoleData.artifactMgr:type_name -> ArtifactMgr
	9,  // 7: RoleData.mercenaryMgr:type_name -> MercenaryMgr
	25, // 8: RoleData.skillMgr:type_name -> SkillMgr
	10, // 9: RoleData.instanceMgr:type_name -> InstanceMgr
	26, // 10: RoleData.warriorOrderMgr:type_name -> WarriorOrderMgr
	27, // 11: RoleData.initialChargeMgr:type_name -> InitialChargeMgr
	28, // 12: RoleData.monthCardMgr:type_name -> MonthCardMgr
	29, // 13: RoleData.gachaMgr:type_name -> GachaMgr
	30, // 14: RoleData.shopMgr:type_name -> ShopMgr
	31, // 15: RoleData.diamondShopMgr:type_name -> DiamondShopMgr
	1,  // 16: RoleData.roleMgr:type_name -> RoleMgr
	11, // 17: RoleData.LoginGiftMgr:type_name -> LoginGiftMgr
	12, // 18: RoleData.DailyTaskMgr:type_name -> DailyTaskMgr
	32, // 19: RoleMgr.Setting:type_name -> Setting
	33, // 20: RoleMgr.extStatus:type_name -> ExtStatus
	13, // 21: HeroMgr.heroes:type_name -> HeroMgr.HeroesEntry
	14, // 22: BagMgr.items:type_name -> BagMgr.ItemsEntry
	15, // 23: BagMgr.equips:type_name -> BagMgr.EquipsEntry
	16, // 24: TalentMgr.talents:type_name -> TalentMgr.TalentsEntry
	17, // 25: TalentMgr.points:type_name -> TalentMgr.PointsEntry
	18, // 26: LeaderMgr.equip:type_name -> LeaderMgr.EquipEntry
	34, // 27: LeaderMgr.mp:type_name -> Mp
	35, // 28: BuildingMgr.lordsMansion:type_name -> LordsMansion
	19, // 29: BuildingMgr.buildingRes:type_name -> BuildingMgr.BuildingResEntry
	20, // 30: ArtifactMgr.artifact:type_name -> ArtifactMgr.ArtifactEntry
	36, // 31: ArtifactMgr.slots:type_name -> ArtifactSummoningSlot
	21, // 32: MercenaryMgr.MercenaryAll:type_name -> MercenaryMgr.MercenaryAllEntry
	22, // 33: InstanceMgr.climbTower:type_name -> InstanceMgr.ClimbTowerEntry
	37, // 34: InstanceMgr.boss:type_name -> InsBoss
	23, // 35: LoginGiftMgr.drawGift:type_name -> LoginGiftMgr.DrawGiftEntry
	24, // 36: DailyTaskMgr.tasks:type_name -> DailyTaskMgr.TasksEntry
	38, // 37: HeroMgr.HeroesEntry.value:type_name -> Hero
	39, // 38: BagMgr.EquipsEntry.value:type_name -> Equip
	40, // 39: TalentMgr.TalentsEntry.value:type_name -> Talent
	41, // 40: BuildingMgr.BuildingResEntry.value:type_name -> BuildingRes
	42, // 41: ArtifactMgr.ArtifactEntry.value:type_name -> Artifact
	43, // 42: MercenaryMgr.MercenaryAllEntry.value:type_name -> Mercenary
	44, // 43: InstanceMgr.ClimbTowerEntry.value:type_name -> InsClimbTower
	45, // 44: DailyTaskMgr.TasksEntry.value:type_name -> DailyTaskPer
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_proto_player_proto_init() }
func file_proto_player_proto_init() {
	if File_proto_player_proto != nil {
		return
	}
	file_proto_comm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BagMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtifactMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercenaryMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginGiftMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_player_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskMgr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_player_proto_goTypes,
		DependencyIndexes: file_proto_player_proto_depIdxs,
		MessageInfos:      file_proto_player_proto_msgTypes,
	}.Build()
	File_proto_player_proto = out.File
	file_proto_player_proto_rawDesc = nil
	file_proto_player_proto_goTypes = nil
	file_proto_player_proto_depIdxs = nil
}
